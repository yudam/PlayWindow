
1. 通过 EGL14.eglGetCurrentContext() 可以在当前渲染线程获取EGLContext，在新的线程中使用EGL创建渲染环境时，
可以获取主渲染线程的 sharedContext 来创建新的EGLContext,通过共享上下文，新创建的渲染线程就可以共享祝渲染线程
的部分资源。

可以共享的资源：

 * 纹理；
 * shader；
 * program 着色器程序；
 * buffer 类对象，如 VBO、 EBO、 RBO 等 。

不可以共享的资源：

 * FBO 帧缓冲区对象（不属于 buffer 类）；
 * VAO 顶点数组对象（不属于 buffer 类）；

这里解释下，在不可以共享的资源中，FBO 和 VAO 属于资源管理型对象，FBO 负责管理几种缓冲区，本身不占用资源，
VAO 负责管理 VBO 或 EBO ，本身也不占用资源。

2. 多线程渲染要确保某些共享资源不会被同时访问，否则渲染会直接报错误,因此需要同步机制来避免线程竞争问题。